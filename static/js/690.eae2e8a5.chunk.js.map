{"version":3,"file":"static/js/690.eae2e8a5.chunk.js","mappings":"oLACA,MCDyD,GAAgBA,UDCpD,CACjBC,KAAM,aACNC,QAAS,w8FA4DTC,YAAa,kCACbC,YAAa,kBACbC,IAAK,ivJAwMLC,QAAS,CACLC,QAAQ,EACRC,UAAW,mBACXC,MAAO,mGAKPC,KAAM,CAAC,CACXC,MAAO,mDACPR,YAAa,mDACbS,KAAM,wOAiBNC,MAAO,CAAC,CACRZ,KAAM,aACNG,YAAa,8BACbU,gBAAiB,gDACjBC,U,eCxSSC,EAAW,CAAC,KAAO,aAAa,QAAU,QAAQ,gBAAe,EAAK,aAAa,cAAc,QAAU,CAAC,CAAC,KAAO,aAAa,QAAU,0CAA0C,YAAc,kCAAS,YAAc,oB","sources":["../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import * as component_1 from '@kne/current-lib_count-down';\nconst readmeConfig = {\n    name: `count-down`,\n    summary: `<h3>CountDown 倒计时组件</h3>\n<h4>组件概述</h4>\n<p>一个基于React的通用倒计时组件，支持自定义时长、格式、单位，提供播放控制、进度回调等功能。</p>\n<h4>功能特性</h4>\n<ul>\n<li>🕒 支持秒/毫秒级倒计时</li>\n<li>⏯️ 自动播放/手动暂停控制</li>\n<li>🔄 可重置倒计时</li>\n<li>📊 实时进度回调</li>\n<li>🎚️ 自定义时间显示格式</li>\n<li>🎛️ 支持ref控制方法</li>\n</ul>\n<h4>基本用法</h4>\n<pre><code class=\"language-jsx\">import CountDown from './CountDown';\n\n// 基础倒计时（60秒，自动播放）\n&lt;CountDown /&gt;\n\n// 带格式和回调的倒计时\n&lt;CountDown \n  format=\"mm分ss秒\" \n  onProgress={(time) =&gt; console.log('剩余:', time)}\n  onComplete={() =&gt; console.log('倒计时结束')}\n/&gt;\n</code></pre>\n<h4>时间格式示例</h4>\n<ul>\n<li><code>HH:mm:ss</code> → 00:01:30</li>\n<li><code>mm分ss秒</code> → 01分30秒</li>\n<li><code>s[s]</code> → 90（纯秒数）</li>\n</ul>\n<h4>注意事项</h4>\n<ol>\n<li>需要项目安装dayjs及其duration插件</li>\n<li>单位切换时需确保duration值匹配单位</li>\n<li>精确控制建议使用milliseconds单位</li>\n</ol>\n<h3>Timer 计时器组件文档</h3>\n<h4>组件概述</h4>\n<p>一个基于React的可控计时器组件，提供精确的时间控制、状态切换和实时回调功能，适合需要精细时间管理的场景。</p>\n<h4>核心功能</h4>\n<ul>\n<li>⏱️ 精确计时控制</li>\n<li>⏯️ 播放/暂停状态切换</li>\n<li>🔄 时间重置功能</li>\n<li>📊 实时获取当前时间</li>\n<li>🎛️ 外部Ref控制接口</li>\n</ul>\n<h4>基本用法</h4>\n<pre><code class=\"language-jsx\">import Timer from './Timer';\n\n// 创建计时器引用\nconst timerRef = useRef();\n\n// 渲染组件\n&lt;Timer ref={timerRef} /&gt;\n\n// 控制示例\ntimerRef.current?.switch(); // 切换播放/暂停\n</code></pre>`,\n    description: `显示倒计时.`,\n    packageName: `@kne/count-down`,\n    api: `<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>duration</td>\n<td>number</td>\n<td>60</td>\n<td>倒计时总时长（单位由unit决定）</td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td>boolean</td>\n<td>true</td>\n<td>是否自动开始倒计时</td>\n</tr>\n<tr>\n<td>unit</td>\n<td>string</td>\n<td>'seconds'</td>\n<td>时间单位（'seconds'或'milliseconds'）</td>\n</tr>\n<tr>\n<td>format</td>\n<td>string</td>\n<td>'mm:ss'</td>\n<td>时间显示格式（dayjs格式）</td>\n</tr>\n<tr>\n<td>onProgress</td>\n<td>function</td>\n<td>-</td>\n<td>进度回调 (currentTime) =&gt; void</td>\n</tr>\n<tr>\n<td>onComplete</td>\n<td>function</td>\n<td>-</td>\n<td>完成回调 () =&gt; void</td>\n</tr>\n</tbody>\n</table>\n<h4>Ref 方法</h4>\n<p>通过ref可调用以下控制方法：</p>\n<pre><code class=\"language-jsx\">const countdownRef = useRef();\n\n// 暂停\ncountdownRef.current?.pause();\n\n// 继续\ncountdownRef.current?.continue();\n\n// 重置\ncountdownRef.current?.restart();\n\n&lt;CountDown ref={countdownRef} /&gt;\n</code></pre>\n<h3>Timer</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>类型</th>\n<th>默认值</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>start</code></td>\n<td>number</td>\n<td>0</td>\n<td>否</td>\n<td>计时器初始值（单位由<code>unit</code>决定）</td>\n</tr>\n<tr>\n<td><code>duration</code></td>\n<td>number</td>\n<td>0</td>\n<td>否</td>\n<td>计时总时长，为0表示无限计时（单位由<code>unit</code>决定）</td>\n</tr>\n<tr>\n<td><code>autoplay</code></td>\n<td>boolean</td>\n<td>true</td>\n<td>否</td>\n<td>是否自动开始计时</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>string</td>\n<td>'seconds'</td>\n<td>否</td>\n<td>时间单位，可选值: 'seconds'（秒）或 'milliseconds'（毫秒）</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>string</td>\n<td>'mm:ss'</td>\n<td>否</td>\n<td>时间显示格式（遵循dayjs格式规则）</td>\n</tr>\n<tr>\n<td><code>onProgress</code></td>\n<td>function</td>\n<td>-</td>\n<td>否</td>\n<td>计时进度回调函数，参数为当前时间值 <code>(currentTime: number) =&gt; void</code></td>\n</tr>\n<tr>\n<td><code>onComplete</code></td>\n<td>function</td>\n<td>-</td>\n<td>否</td>\n<td>计时完成回调函数（当<code>duration&gt;0</code>且<code>time&gt;=duration</code>时触发）</td>\n</tr>\n</tbody>\n</table>\n<h4>单位说明</h4>\n<ul>\n<li><code>seconds</code>: 秒级计时（1 = 1秒）</li>\n<li><code>milliseconds</code>: 毫秒级计时（1000 = 1秒）</li>\n</ul>\n<h4>格式示例</h4>\n<table>\n<thead>\n<tr>\n<th>格式字符串</th>\n<th>示例输出</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>'HH:mm:ss'</td>\n<td>00:01:30</td>\n<td>标准时分秒格式</td>\n</tr>\n<tr>\n<td>'mm:ss'</td>\n<td>01:30</td>\n<td>分钟秒格式（默认）</td>\n</tr>\n<tr>\n<td>'s[s]'</td>\n<td>90</td>\n<td>纯秒数显示</td>\n</tr>\n<tr>\n<td>'m[m]s[s]'</td>\n<td>1m30s</td>\n<td>自定义分钟秒组合</td>\n</tr>\n</tbody>\n</table>\n<h4>Ref 控制方法</h4>\n<p>通过ref可调用以下控制方法：</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>参数</th>\n<th>返回值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>restart</td>\n<td>-</td>\n<td>void</td>\n<td>重置计时器</td>\n</tr>\n<tr>\n<td>switch</td>\n<td>-</td>\n<td>void</td>\n<td>切换暂停/继续状态</td>\n</tr>\n<tr>\n<td>getTime</td>\n<td>-</td>\n<td>number</td>\n<td>获取当前时间值</td>\n</tr>\n</tbody>\n</table>\n<pre><code class=\"language-jsx\">// 典型控制流程示例\ntimerRef.current.restart();  // 重置\ntimerRef.current.switch();   // 开始计时\nconst currentTime = timerRef.current.getTime(); // 获取时间\n</code></pre>`,\n    example: {\n        isFull: false,\n        className: `count_down_d5f7f`,\n        style: `.count_down_d5f7f .ant-card {\n  border-color: black;\n  text-align: center;\n  width: 200px;\n}`,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const { default: CountDown, Timer } = _CountDown;\n\nconst BaseExample = () => {\n  return (\n    <><div>\n      <CountDown />\n    </div>\n    <div>\n      <Timer />\n    </div>\n    </>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_CountDown\",\n    packageName: \"@kne/current-lib_count-down\",\n    importStatement: \"import * as _CountDown from \\\"@kne/count-down\\\"\",\n    component: component_1\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import CountDown from '@components/count-down/README.md';export default {CountDown};\nexport const manifest = {\"name\":\"count-down\",\"version\":\"0.2.1\",\"open-version\":true,\"public-url\":\"/count-down\",\"modules\":[{\"name\":\"count-down\",\"baseDir\":\"/home/runner/work/count-down/count-down\",\"description\":\"显示倒计时.\",\"packageName\":\"@kne/count-down\"}]};"],"names":["CountDown","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","importStatement","component","manifest"],"sourceRoot":""}